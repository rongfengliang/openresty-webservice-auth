user root;  
worker_processes  1;
events {
    worker_connections  1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"'
                      '$http_token'
                      '$cookie_ingress_uid';
    include       mime.types;
    default_type  application/octet-stream;
    gzip  on;
    rewrite_log on;
    real_ip_header     X-Forwarded-For;
    server {
       listen 80;
       charset utf-8;
       userid         on;
       userid_name    ingress_uid;
       userid_path    /;
       root html;
       userid_expires 365d;
       default_type text/html;
       location / {
            access_by_lua_block {
                 if ngx.req.get_headers()["token"] == nil  then
                    ngx.exit(ngx.HTTP_FORBIDDEN)
                 end
            }
            add_before_body /before_action;
            add_after_body  /after_action;
            access_log  logs/access2.log  main;
            sub_filter http://www.dneonline.com 'http://localhost';
            sub_filter_types text/xml; 
            sub_filter_once off;
            proxy_set_header Accept-Encoding '';
            proxy_set_header Host www.dneonline.com;
            proxy_set_header X-Forwarded-For $remote_addr;
            client_body_buffer_size 10M;
            proxy_set_header X-Forwarded-Proto      $scheme;
            client_max_body_size 10G;
            proxy_buffers 1024 4k;
            proxy_read_timeout 300;
            proxy_pass http://www.dneonline.com;
       }
       location = /app.html {
          add_before_body /header.html;
          add_after_body  /footer.html;
       }
       location  /before_action {
          content_by_lua_block {
            ngx.say("this is before content")
          }
       }
       location  /after_action {
          content_by_lua_block {
            ngx.say("this is after content")
          }
       }
    }
}